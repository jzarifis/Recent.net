trigger:
  branches:
    include:
    - master
    - develop
  paths:
    include:
    -  RecentLib/*

pool:
  name: Hosted Windows 2019 with VS2019

variables:
  - group: commonVariables
  - name: Version
    value: '$(VersionMajor).$(VersionMinor).$(VersionPatch)'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'if($(Build.SourceBranch) -eq "develop"){
        $PreRelease=($(Version)+"dev")
        Write-Host "##vso[task.setvariable variable=Version]$(PreRelease)
      }'

- task: DotNetCoreCLI@2
  name: dotnetRestore
  displayName: "Restoring nugets..."
  inputs:
    command: 'restore'
    projects: 'RecentLib/*.csproj'
    verbosityRestore: 'Normal'

- task: DotNetCoreCLI@2
  name: dotnetBuild
  displayName: "Building project..."
  inputs:
    command: 'build'
    projects: 'RecentLib/*.csproj'
    arguments: '--no-restore'


# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'pack'
#     searchPatternPack: 'RecentLib/*.csproj'
#     versioningScheme: 'byEnvVar'
#     versionEnvVar: 'Version'
#     verbosityPack: 'Normal'
#     arguments: --include-symbols --include-source

- task: DotNetCoreCLI@2
  name: dotnetPack
  displayName: "Packing nugets..."
  inputs:
    command: 'custom'
    projects: 'RecentLib/*.csproj'
    custom: 'pack'
    arguments: '--output $(Build.ArtifactStagingDirectory) /p:Configuration=$(Release) /p:PackageVersion=$(Version)  --verbosity Normal --include-symbols'

- task: PublishBuildArtifacts@1
  name: publishToFeed
  displayName: "Publishing artifacts..."
  inputs:
    ArtifactName: 'drop'

- task: DotNetCoreCLI@2
  name: dotnetPushNuget
  displayName: "Pushing nugets to feed..."
  inputs:
    command: 'push'
    packagesToPush: '$(build.artifactStagingDirectory)/*nupkg'
    verbosityPack: 'Minimal'
    feedPublish: 'NessosShared'
